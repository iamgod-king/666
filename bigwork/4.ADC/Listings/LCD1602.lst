C51 COMPILER V9.60.7.0   LCD1602                                                           10/26/2023 00:30:53 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\4.ADC) DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\LCD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "LCD1602.h"
   3          
   4          sbit LCD_RS=P2^6;
   5          sbit LCD_E=P2^7;
   6          sbit LCD_RW=P2^5;
   7          #define LCD_DataPort P0
   8          
   9          void LCD_Delay()
  10          {
  11   1        unsigned char i,j;
  12   1        
  13   1        i=2;
  14   1        j=239;
  15   1        do
  16   1        {
  17   2          while(--j);
  18   2        }while(--i);
  19   1      }
  20          
  21          
  22          //准备？
  23          void LCD_WriteCommand(unsigned char Command)
  24          {
  25   1        LCD_RS=0;
  26   1        LCD_RW=0;
  27   1        LCD_DataPort=Command;
  28   1        LCD_E=1;
  29   1        LCD_Delay();
  30   1        LCD_E=0;
  31   1        LCD_Delay();
  32   1      }
  33          
  34          
  35          
  36          //写数据函数
  37          void LCD_WriteData(unsigned char Data)
  38          {
  39   1        LCD_RS=1;//数据
  40   1        LCD_RW=0;//写入
  41   1        LCD_DataPort=Data;
  42   1        LCD_E=1;//允许
  43   1        LCD_Delay();
  44   1        LCD_E=0;
  45   1        LCD_Delay();
  46   1      }
  47          
  48          
  49          //初始化
  50          void LCD_Init()     
  51          {
  52   1        LCD_WriteCommand(0x38);  //8位数据接口，2行显示，5*7点阵
  53   1        LCD_WriteCommand(0x0C);  //显示开，光标关，闪烁关
  54   1        LCD_WriteCommand(0x06);  //数据读写操作后，光标自动加1，画面不动
C51 COMPILER V9.60.7.0   LCD1602                                                           10/26/2023 00:30:53 PAGE 2   

  55   1        LCD_WriteCommand(0x01);  //清屏
  56   1      }
  57          
  58          
  59          //简单点
  60          void LCD_SetCursor(unsigned char Line,unsigned char Column)
  61          {
  62   1        if(Line==1)
  63   1        {
  64   2          LCD_WriteCommand(0x80|(Column-1));
  65   2        }
  66   1        else
  67   1        {
  68   2          LCD_WriteCommand(0x80|(Column-1)+0x40);  //为什么加那玩意
  69   2        }
  70   1      }
  71          
  72          
  73          //字符
  74          void LCD_ShowChar(unsigned char Line,unsigned char Column,unsigned char Char)
  75          {
  76   1        LCD_SetCursor(Line,Column);
  77   1        LCD_WriteData(Char);
  78   1      }
  79          
  80          
  81          //字符串
  82          void LCD_ShowString(unsigned char Line,unsigned char Column,unsigned char *String)
  83          {
  84   1        unsigned char i;
  85   1        LCD_SetCursor(Line,Column);
  86   1        for(i=0;String[i]!='\0';i++)
  87   1        {
  88   2          LCD_WriteData(String[i]);
  89   2        }
  90   1      }
  91          
  92          
  93          //取位函数
  94          int LCD_Pow(int X,int Y)
  95          {
  96   1        unsigned char i;
  97   1        int Result=1;
  98   1        for(i=0;i<Y;i++)
  99   1        {
 100   2          Result*=X;
 101   2        }
 102   1        return Result;
 103   1      }
 104          
 105          
 106          //
 107          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 108          {
 109   1        unsigned char i;
 110   1        LCD_SetCursor(Line,Column);
 111   1        for(i=Length;i>0;i--)
 112   1        {
 113   2          LCD_WriteData('0'+Number/LCD_Pow(10,i-1)%10);
 114   2        }
 115   1      } 
 116          
C51 COMPILER V9.60.7.0   LCD1602                                                           10/26/2023 00:30:53 PAGE 3   

 117          
 118          //输入负数
 119          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 120          {
 121   1        unsigned char i;
 122   1        unsigned int Number1;   //真尼玛严谨
 123   1        LCD_SetCursor(Line,Column);
 124   1        if(Number>=0)
 125   1        {
 126   2          LCD_WriteData('+');
 127   2          Number1=Number;
 128   2        }
 129   1        else
 130   1        {
 131   2          LCD_WriteData('-');
 132   2          Number1=-Number;
 133   2        }
 134   1        for(i=Length;i>0;i--)
 135   1        {
 136   2          LCD_WriteData('0'+Number1/LCD_Pow(10,i-1)%10);
 137   2        }
 138   1      }
 139          
 140          
 141          //显示16进制
 142          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 143          {
 144   1        unsigned char i;
 145   1        unsigned char SingleNumber;
 146   1        LCD_SetCursor(Line,Column);
 147   1        for(i=Length;i>0;i--)
 148   1        {
 149   2          SingleNumber=Number/LCD_Pow(16,i-1)%16;
 150   2          if(SingleNumber<10)
 151   2          {
 152   3            LCD_WriteData('0'+SingleNumber);
 153   3          } 
 154   2          else
 155   2          {
 156   3            LCD_WriteData('A'+SingleNumber-10);
 157   3          }
 158   2        }
 159   1      } 
 160          
 161          
 162          //显示2进制
 163          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 164          {
 165   1        unsigned char i;
 166   1        LCD_SetCursor(Line,Column);
 167   1        for(i=Length;i>0;i--)
 168   1        {
 169   2          LCD_WriteData('0'+Number/LCD_Pow(2,i-1)%2);
 170   2        }
 171   1      }
 172          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    387    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   LCD1602                                                           10/26/2023 00:30:53 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
